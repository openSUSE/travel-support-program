- model_class = Reimbursement
= content_for :page_header, t('.title', :default => model_class.model_name.human) + " #{resource.label}"

= show_for resource do |r|
  = r.association :event do
    = render resource.event
  = r.association :user do
    = render resource.user
  = r.attribute :request do
    = render parent
  = r.attribute :state do
    = state_info(r.object)
    %div.alert-info= resource.human_state_guide
  = r.attribute :state_changes do
    = render "state_changes_list", :locals => {:resource => @request}
  = r.attribute :description
  = r.association :bank_account do
    - if resource.bank_account.nil?
      = t("show_for.blank")
    - else
      = render resource.bank_account

  = r.association :links do
    = reimbursement_links(resource)

  = r.association :attachments do
    = reimbursement_attachments(resource)

  = r.attribute :acceptance_file do
    = reimbursement_acceptance_file(resource)

  = r.association :payments do
    = reimbursement_payments(resource)

  %strong.label= Request.human_attribute_name(:expenses)
  %table.table.table-condensed
    %thead
      %tr
        %th= RequestExpense.human_attribute_name(:subject)
        %th= RequestExpense.human_attribute_name(:description)
        %th= RequestExpense.human_attribute_name(:estimated_amount)
        %th= RequestExpense.human_attribute_name(:approved_amount)
        %th= RequestExpense.human_attribute_name(:total_amount)
        %th= RequestExpense.human_attribute_name(:authorized_amount)
    %tbody#expenses
      - @request.expenses.each do |expense|
        %tr
          %td= expense.subject
          %td= expense.description
          %td= number_to_currency(expense.estimated_amount, :unit => expense.estimated_currency)
          %td= number_to_currency(expense.approved_amount, :unit => expense.approved_currency)
          %td= number_to_currency(expense.total_amount, :unit => expense.total_currency)
          %td= number_to_currency(expense.authorized_amount, :unit => expense.authorized_currency)

  = render :partial => "comments", :locals => {:show_builder => r}

.form-actions

  - if can? :edit, resource
    = link_to t('.edit', :default => t("helpers.links.edit")), edit_resource_path, :class => 'btn'

  - if can? :accept, resource
    = link_to t(:send_reimbursement_acceptance), new_request_reimbursement_acceptance_path(resource.request), :remote => true, :class => 'btn'
  - if can_read_pdf_for? resource
    = link_to t(:pdf_format), {:format => :pdf}, :class => 'btn', :target => "_blank"

  - if can? :create, resource.payments.build
    = link_to t(:new_payment), new_request_reimbursement_payment_path(resource.request), :class => 'btn'
    = check_request_link(resource)

  = transition_links(resource) 

  - if can?(:create, resource.comments.build)
    = link_to(t(:create_comment), resource_path + "/comments/new.js", :remote => true, :class => 'btn')

  - if can? :cancel, resource
    = link_to t("helpers.links.cancel"), new_request_reimbursement_state_transition_path(resource.request, "state_transition[state_event]" => "cancel"), :remote => true, :class => 'btn btn-danger'

  - if can? :adjust_state, resource
    = link_to t("helpers.links.adjust_state"), new_request_reimbursement_state_adjustment_path(resource.request), :remote => true, :class => 'btn btn-danger'
