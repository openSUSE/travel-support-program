- model_class = Request
= content_for :page_header, t('.title', :default => model_class.model_name.human) + " #{resource.label}"

= show_for @request do |r|
  = r.association :event do
    = render @request.event
  = r.association :user do
    = render @request.user
  = r.attribute :state do
    = state_info(r.object)
    %div.alert-info= @request.human_state_guide
  = r.attribute :state_changes do
    = render "state_changes_list", :locals => {:resource => @request}

  - if @request.reimbursement
    = r.association :reimbursement do
      = timestamped_state(@request.reimbursement)
      = icon_to "share-alt", request_reimbursement_path(@request), :title => t(:goto)
  - elsif @request.can_have_reimbursement?
    = r.association :reimbursement do
      = t(:no_reimbursement_yet)
  - elsif !@request.event.accepting_reimbursements?
    = r.association :reimbursement do
      = t(:not_accepting_reimbursements)
      = content_tag(:span, "!", :class => "badge badge-info")

  = r.attribute :visa_letter if @request.visa_letter_allowed?
  = r.attribute :description

  %strong.label= Request.human_attribute_name(:expenses)
  %table.table.table-condensed
    %thead
      %tr
        %th= RequestExpense.human_attribute_name(:subject)
        %th= RequestExpense.human_attribute_name(:description)
        %th= RequestExpense.human_attribute_name(:estimated_amount)
        %th= RequestExpense.human_attribute_name(:approved_amount)
    %tbody#expenses
      - @request.expenses.each do |expense|
        %tr
          %td= expense.subject
          %td= expense.description
          %td= number_to_currency(expense.estimated_amount, :unit => expense.estimated_currency)
          %td= number_to_currency(expense.approved_amount, :unit => expense.approved_currency)

  = render :partial => "comments", :locals => {:show_builder => r}

.form-actions

  = link_to t('.back', :default => t("helpers.links.back")), requests_path, :class => 'btn'

  - if can? :edit, @request
    = link_to t('.edit', :default => t("helpers.links.edit")), edit_request_path(@request), :class => 'btn'

  = transition_links(@request)

  - if @request.lacks_reimbursement? && can?(:create, @request.build_reimbursement)
    = link_to t(:create_reimbursement), request_reimbursement_path(@request), :method => :post, :class => 'btn'

  - if can?(:create, @request.comments.build)
    = link_to(t(:create_comment), resource_path + "/comments/new.js", :remote => true, :class => 'btn')

  - if can? :destroy, @request
    = link_to t('.destroy', :default => t("helpers.links.destroy")), request_path(@request), :method => "delete", :data => { :confirm => t("helpers.links.confirm") }, :class => 'btn btn-danger'
  - elsif can? :cancel, @request
    = link_to t("helpers.links.cancel"), new_request_state_transition_path(@request, "state_transition[state_event]" => "cancel"), :remote => true, :class => 'btn btn-danger'
    
  - if can? :adjust_state, @request
    = link_to t("helpers.links.adjust_state"), new_request_state_adjustment_path(@request), :remote => true, :class => 'btn btn-danger'

